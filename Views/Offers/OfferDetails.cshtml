@model Projekt_Zespolowy.ViewModels.OfferDetailsVM

@{
	ViewData["Title"] = Model.Offer.OfferName;
}

<div>
	<h4>@Html.DisplayFor(model => model.Offer.OfferName)</h4>
	<hr />

	<dl class="row">
		<form method="post" asp-controller="User" asp-action="UserPanel" style="margin-bottom:5px;">
			<input type="hidden" name="OfferCreatorId" value="@Model.Offer.OfferCreator.Id" />
			<div class="form-group" >
				<i class="fa-solid fa-user" style="font-size: 25px"></i>
				<input type="submit" value="@Model.Offer.OfferCreator.UserName"  style="background-color:transparent; font-weight:bold; border:none;"/>
			</div>
		</form>
		@if(Model.Offer.Category != null)
		{
				<dt class="col-3">
				@Html.DisplayNameFor(model => model.Offer.Category)
			</dt>
			<dd class="col-9">
				@Html.DisplayFor(model => model.Offer.Category.Name)
			</dd>
		}
		<dt class="col-3">
			@Html.DisplayNameFor(model => model.Offer.OfferCreator.FirstName)
		</dt>
		<dd class="col-9">
			@Html.DisplayFor(model => model.Offer.OfferCreator.FirstName)
		</dd>
		<dt class="col-3">
			@Html.DisplayNameFor(model => model.Offer.OfferCreator.LastName)
		</dt>
		<dd class="col-9">
			@Html.DisplayFor(model => model.Offer.OfferCreator.LastName)
		</dd>

		@*Jeśli uzytkownik zalogowany to widzi numer telefonu oferenta*@
		@if (User.Identity.IsAuthenticated && !string.IsNullOrEmpty(Model.Offer.OfferCreator.PhoneNumber))
		{
				<dt class = "col-3">
				Numer telefonu
				</dt>
				<dd class = "col-9">
				@Html.DisplayFor(model => model.Offer.OfferCreator.PhoneNumber)
				</dd>
		}
		<dt class = "col-3">
			@Html.DisplayNameFor(model => model.Offer.Price)
		</dt>
		<dd class = "col-9">
			@Html.DisplayFor(model => model.Offer.Price) [zł/h]
		</dd>

		@if (Model.Offer.IsOnline)
		{
				<dt class = "col-3">
				@Html.DisplayNameFor(model => model.Offer.IsOnline)
				</dt>
				<dd class = "col-9">
					<span>Zajęcia odbywają się zdalnie</span>
				</dd>
		}
		else
		{
				<div class="offer-localization">
					<div class="row">
					<dt class="col-3">
						@Html.DisplayNameFor(model => model.Offer.Localization.City)
					</dt>
					<dd class="col-9">
						@Html.DisplayFor(model => model.Offer.Localization.City)
					</dd>
					</div>
					<div class="row">
					<dt class="col-3">
						@Html.DisplayNameFor(model => model.Offer.Localization.PostalCode)
					</dt>
					<dd class="col-9">
						@Html.DisplayFor(model => model.Offer.Localization.PostalCode)
					</dd>
					</div>
					<div class="row">
					<dt class="col-3">
						@Html.DisplayNameFor(model => model.Offer.Localization.Street)
					</dt>
					<dd class="col-9">
						@Html.DisplayFor(model => model.Offer.Localization.Street)
					</dd>
					</div>
					<div class="row">
					<dt class="col-3">
						@Html.DisplayNameFor(model => model.Offer.Localization.HouseNumber)
					</dt>
					<dd class="col-9">
						@Html.DisplayFor(model => model.Offer.Localization.HouseNumber)
					</dd>
					</div>
				@if (!string.IsNullOrEmpty(Model.Offer.Localization.HomeNumber))
				{
							<div class="row">
							<dt class="col-3">
							@Html.DisplayNameFor(model => model.Offer.Localization.HomeNumber)
							</dt>
							<dd class="col-9">
							@Html.DisplayFor(model => model.Offer.Localization.HomeNumber)
							</dd>
							</div>
				}
				</div>
		}

		<dt class = "col-3">
			@Html.DisplayNameFor(model => model.Offer.OfferDescription)
		</dt>
		<dd class = "col-9">
			@Html.DisplayFor(model => model.Offer.OfferDescription)
		</dd>	
	</dl>

	@*Poziomy nauczania*@
	@if (Model.Offer.LevelClasses.Any())
	{
				<span>Poziom nauczania:</span>
		@foreach (var level in Model.Offer.LevelClasses)
		{
			@level.Name
		}
	}
	<div class="row">
	<dt class="col-3">
			@Html.DisplayNameFor(model => model.Offer.OfferCreator.Score)
	</dt>

	<div class="col-9">
			@if (Model.Offer.OfferCreator.Score != float.NaN && Model.Offer.OfferCreator.Score > 0)
			{
				int yellowStarCount = (int)Model.Offer.OfferCreator.Score;
				int greyStarCount = 5 - yellowStarCount;
				for (int i = 0; i < yellowStarCount; i++)
				{
					<i class="fa-regular fa-star" style="color:gold;"></i>
				}
				for (int i = 0; i < greyStarCount; i++)
				{
					<i class="fa-regular fa-star" style="color:grey;"></i>
				}
			}
			else
			{
			<div class="p-2">--</div>
			}
	</div>
	</div>

	@if (Model.isCommented == false && Model.isOwner == false)
	{
		@if (User.Identity.IsAuthenticated)
		{
					<form method="post" asp-controller="Offers" asp-action="AddComment">
						<input type="hidden" name="OfferCreatorId" value="@Model.Offer.OfferCreator.Id" />
						<div class="form-group">
							<label asp-for="Opinion.Comment" class="control-label"></label>
								<input asp-for="Opinion.Comment" class="form-control" />
								<span asp-validation-for="Opinion.Comment" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="Opinion.Rate" class="control-label"></label>
							<input asp-for="Opinion.Rate" class="form-control" />
								<span asp-validation-for="Opinion.Rate" class=" text-danger"></span>

						</div>
						<div class="form-group">
							<input type="submit" style="background-color: burlywood; border:none;" value="Dodaj ocenę" class="btn btn-primary" />
						</div>
					</form>
		}
	}
	else
	{
		@if(Model.isOwner == true)
		{
			<div class="form-group">
				<label style="color:forestgreen">Nie możesz skomentować sam siebie</label>
			</div>
		}
		else
		{
			
		<div class="form-group">
				<label style="color:forestgreen">Już Skomentowałeś Użytkownika: @Model.Offer.OfferCreator.FirstName @Model.Offer.OfferCreator.LastName</label>
			</div>
		}
			<div class="form-group">
				<label asp-for="Opinion.Comment" class="control-label" ></label>
				<input asp-for="Opinion.Comment" class="form-control" disabled />
				<span asp-validation-for="Opinion.Comment" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Opinion.Rate" class="control-label"></label>
				<input asp-for="Opinion.Rate" class="form-control" disabled/>
				<span asp-validation-for="Opinion.Rate" class=" text-danger"></span>

			</div>
	}
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	}
